= Android
Flappy Whatever
:backend:   slidy
:max-width: 45em
:data-uri:
:icons:
:theme: volnitsky
:pygments:
<link rel="stylesheet" href="myslidy.css" type="text/css" />


== Création d'un petit jeu
* Temps réel
* Fluidité
* Le jeu de votre choix


== ATTENTION
* Ce TP sera relevé et noté
* Il comptera pour 2/3 de votre note finale
* Je tiens autant à la qualité du code qu'au nombre de fonctionnalités
* L'originalité est un plus


== Les ressources graphiques
* Si vous avez besoin d'images, de sons, allez faire un tour sur  http://opengameart.org/
* Beaucoup de ressources disponibles gratuitement, parfait pour se lancer


== Initialisation du projet
* On va charger une base toute faite afin d'éviter de perdre trop de temps sur les réglages
* Chargez le projet FlappyDragon
* Renommez le à votre sauce
* Lancez-le sur votre téléphone


== SurfaceView
* On utilise une SurfaceView pour dessiner nos éléments
 - On veut que l'affichage soit très dynamique
 - On veut pouvoir utiliser le canvas
* On va utiliser le concept de sprites, petites zones rectangulaires qu'on va dessiner à l'écran.


== Menu et options
* Rajoutez une Activité principale qui affiche un écran d'accueil
* Ajoutez un écran de type _About_ avec les informations sur votre groupe de travail (seul ou binôme)
* Ajoutez un menu avec quelques options  qui correspondent à celles de votre jeu (vitesse max, vitesse de scrolling...)
 - Ces options doivent persister à un nouveau lancement de l'application


== Personnage et mouvement
* Mettez au point un moyen de faire se déplacer votre personnage
 - (comme un appui pour faire remonter par exemple)
* Vous pouvez rajouter la gestion de la gravité (déjà fait dans l'exemple)


== Collisions
* Implémentez des collisions
* Affichez au moins un message en cas de collision
* Redémarrez le jeu une fois le message affiché
* Vous pouvez rajouter des obstacles
 - tuyaux entre lesquels passer
 - bonus à attraper au vol
 - autre selon votre bon vouloir


== Sons
* On veut entendre un son à chaque fois qu'on saute
* On peut ajouter une musique de fond
* On voudra entendre un son quand on prend une pièce
* Son spécifique en cas de crash


== Fond
* Faites défiler le fond
* Idéalement ajoutez du paralaxe, vous avez toutes les ressources pour cela
* Ajouter des obstacles et gérez les collisions


== Scoring
* Ajoutez un système de score
* Affichez le score actuel
* Gardez trace des meilleurs scores


== Bonus
* Etonnez moi, ajoutez ce que bon vous semblera
* N'hésitez pas à préciser dans un fichier Readme, les spécificités de VOTRE application, que je n'en rate pas
